openapi: 3.0.1
info:
  title: ClientesGestion
  description: >-
    Servicios relacionados al cliente. Ejemplo: sus productos y servicios,
    cobranzas, deudas. Configuraciones.
  contact:
    name: Banco Familiar
    email: desarrollo_bf@familiar.com.py
  version: v1
servers:
  - url: 'https://api-test.familiar.com.py'
security:
  - default: []
paths:
  '/clientes/{codigoCliente}/productos/cuentas':
    get:
      summary: Obtener lista de cuentas de un cliente
      description: >-
        Obtener informacion sobre todas las cuentas del clientes. Cajas de
        ahorro, cuentas corrientes, cuentas digitales, etc.
      operationId: getallcuenta
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Listar Cuenta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuentaListar'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/cuentas/{codigoCuenta}':
    get:
      summary: Obtener detalles de una cuenta
      description: >-
        Obtiene todos los detalles de una cuenta en especifico, sus saldos y
        configuracion.
      operationId: getcuenta
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: codigoCuenta
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Cuenta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuenta'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/cuentas/{codigoCuenta}/movimientos':
    get:
      summary: Movimientos de una cuenta
      description: Obtiene todos los movimientos de una cuenta de un rango en específico
      operationId: list
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: codigoCuenta
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: fechaDesde
          in: query
          description: Fecha de inicio de búsqueda
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: fechaHasta
          in: query
          description: Fecha de fin de búsqueda
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: limite
          in: query
          description: Cantidad de registros por página
          required: false
          style: form
          explode: true
          schema:
            type: number
        - name: pagina
          in: query
          description: Número de página
          required: false
          style: form
          explode: true
          schema:
            type: number
      responses:
        '200':
          description: Cuenta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/movimientoList'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/servicios/cotizaciones':
    get:
      summary: Obtiene las tasas de cambio prepactada con un cliente
      description: Devuelve las tasas de cambio prepactada de un cliente
      operationId: getCotizacioPrepactada
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: lista de operaciones prepactadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prepactadoListar'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/cobranzas/gestores':
    get:
      summary: Gestor asignado
      description: Retorna el útlimo gestor asignado al cliente
      operationId: getAllGestorCliente
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: tramo y gestor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/evento'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/cobranzas/seguimientos':
    get:
      summary: seguimientos de cobro a un cliente
      description: Retorna los gestores asignados al cliente
      operationId: getAllSeguimientosCliente
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: fechaDesde
          in: query
          description: Fecha de inicio de búsqueda
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: fechaHasta
          in: query
          description: Fecha de fin de búsqueda
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: limite
          in: query
          description: Cantidad de registros por página
          required: false
          style: form
          explode: true
          schema:
            type: number
        - name: pagina
          in: query
          description: Número de página
          required: false
          style: form
          explode: true
          schema:
            type: number
      responses:
        '200':
          description: Lista los eventos de cobranzas realizado por un gestor al clientes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/seguimientos'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
    post:
      summary: registra un seguimiento de cobro realizado a un cliente
      description: Registra un seguimiento para el cobro de la deuda de un cliente.
      operationId: updateSeguimientobyCliente
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/seguimientoRequest'
      responses:
        '200':
          description: Response generico para alta y actualización de registros.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/respuestaExitosa'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/cobranzas/operaciones/mora':
    get:
      summary: Operaciones con días de mora.
      description: >-
        Retorna las operaciones con dias de mora por cliente para la gestión de
        cobranza.
      operationId: getAllOperacionesMoraCliente
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: fechaDesde
          in: query
          description: Fecha de inicio de búsqueda
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: fechaHasta
          in: query
          description: Fecha de fin de búsqueda
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: limite
          in: query
          description: Cantidad de registros por página
          required: false
          style: form
          explode: true
          schema:
            type: number
        - name: pagina
          in: query
          description: Número de página
          required: false
          style: form
          explode: true
          schema:
            type: number
      responses:
        '200':
          description: >-
            Lista las operaciones en mora por cada cliente para la gestión de
            cobranza.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operacionesMora'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /clientes/producto/cuentas/debitoCredito/bloqueo:
    post:
      description: >-
        Realiza un bloqueo de un movimiento de débito de la cuenta del cliente a
        una cuenta definida de BF.
      parameters: []
      responses:
        '200':
          description: ok
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  /clientes/producto/cuentas/debitoCredito:
    post:
      parameters: []
      responses:
        '200':
          description: >-
            Confirma la operacion de movimiento de debito  de la cuenta del 
            cliente a una cuenta definida de Banco Familiar.
      security:
        - default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/tarjetas':
    get:
      summary: Obtener lista de tarjetas de un cliente
      description: Obtener informacion sobre todas las tarjetas del cliente.
      operationId: getalltarjetas
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Listar Tarjeta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tarjetaListar'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/tarjetas/{codigoCuenta}':
    get:
      summary: Obtener detalles de una tarjeta
      description: >-
        Obtiene todos los detalles de una tarjeta en especifico, sus saldos y
        configuracion.
      operationId: gettarjeta
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: codigoCuenta
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Tarjeta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tarjetaResponse'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/cda':
    get:
      summary: Obtener lista de tarjetas de un cliente
      description: Obtener informacion sobre todas las tarjetas del cliente.
      operationId: getallcda
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Listar CDA
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdaListar'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/cda/{codigoCuenta}':
    get:
      summary: Obtener detalles de un CDA
      description: Obtiene todos los detalles de un CDA.
      operationId: getcda
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: codigoCuenta
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: CDA
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cdaResponse'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/prestamos':
    get:
      summary: Obtener lista de prestamos de un cliente
      description: Obtener informacion sobre todas los prestamos del cliente.
      operationId: getallprestamos
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Listar Prestamos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prestamoListar'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/productos/prestamos/{codigoCuenta}':
    get:
      summary: Obtener detalles de un prestamo
      description: Obtiene todos los detalles de un prestamo.
      operationId: getprestamo
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: codigoCuenta
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Prestamo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prestamoResponse'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/{codigoCliente}/cobranzas/asignaciones/gestores':
    post:
      summary: Asigna un gestor a un cliente en la gestión de cobranzas.
      description: Registra y asigna un gestor a un cliente en la gestón de cobranzas.
      operationId: updateAsignacionGestorbyCliente
      parameters:
        - name: codigoCliente
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/asignarGestorRequest'
      responses:
        '200':
          description: Response generico para alta y actualización de registros.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/respuestaExitosa'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
  '/clientes/productos/cuentas/{codigoCuenta}':
    get:
      summary: Obtener detalles de una cuenta
      description: >-
        Obtiene todos los detalles de una cuenta en especifico, sus saldos y
        configuracion.
      operationId: getcuentasincliente
      parameters:
        - name: codigoCuenta
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: Cuenta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuenta'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '422':
          description: TooManyRequests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpError'
      security:
        - default: []
      x-throttling-tier: Unlimited
      x-auth-type: Application & Application User
      x-wso2-application-security:
        security-types:
          - oauth2
          - api_key
        optional: false
components:
  schemas:
    httpError:
      $ref: ./familiar-components-v1.0.0.yaml#/components/schemas/httpError
    prepactadoListar:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/prepactadoListar'
    cuentaListar:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/cuentaListar'
    cuenta:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/cuenta'
    movimientoList:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/movimientoList'
    evento:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/evento'
    respuestaExitosa:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/respuestaExitosa'
    tarjetaResponse:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/tarjetaResponse'
    prestamoResponse:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/prestamoResponse'
    tarjetaListar:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/tarjetaListar'
    cdaListar:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/cdaListar'
    seguimientos:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/seguimientos'
    cdaResponse:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/cdaResponse'
    prestamoListar:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/prestamoListar'
    operacionMora:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/operacionMora'
    operacionesMora:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/operacionesMora'
    operacionMoraCliente:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/operacionMoraCliente'
    operMora:
      $ref: './familiar-components-v1.0.0.yaml#/components/schemas/operMora'

  requestBodies:
    seguimientoRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: './familiar-components-v1.0.0.yaml#/components/schemas/evento'
              - $ref: './familiar-components-v1.0.0.yaml#/components/schemas/registroAuditoria'
                required: true
    asignarGestorRequest:
      content:
        application/json:
          schema:
            allOf:
              - $ref: './familiar-components-v1.0.0.yaml#/components/schemas/evento'
              - $ref: './familiar-components-v1.0.0.yaml#/components/schemas/registroAuditoria'
                required: true

  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://test.com'
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - Internal-Key
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - 'https://api-test.familiar.com.py'
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - 'https://api-test.familiar.com.py'
  type: http
x-wso2-basePath: /clientesgestion/v1
x-wso2-transports:
  - http
  - https
x-wso2-application-security:
  security-types:
    - oauth2
    - api_key
  optional: false
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
